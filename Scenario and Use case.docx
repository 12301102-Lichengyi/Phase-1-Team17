Scenario and Use case - Team 17
1.	Scenario
1.1	Scenario 1
Delivery take-out by the way.
(1)	Before:
I’m hanging out on the street near the college. I’m so boring and want to earn some money by the way.
(2)	During:
I open this app, search whether there is anything I can delivery on my way home, so that I can earn a little tips. 
(3)	After:
I find there is a nearby restaurant needs a part-time delivery drivers, so I take this order, help this restaurant send this take-out to the customer. Then I get tips from the restaurant.
 
1.2	Scenario 2
Find some delivery drivers easily, so I can take a lot of order
(1)	Before:
I am a restaurant manager. Our restaurant always busy during lunch time, there are a lot of take-out we should delivery. We need some part-time delivery drivers.
(2)	During:
I use this app. When I get some order from the customer, this app help me push these message on the internet, nearby people who use this app will see that I need a delivery driver. If they want to earn tips, they could take this order.
(3)	After:
People who take this order comes to our restaurant, help us delivery this take-out to the customer. After this guy get the verification code from the customer, we will pay the tips for him.
2.	Use cases
2.1. Use case 1-Registration
Precondition-none
Description-The user input the name, password, e-mail and phone number. 
Postcondition-Return the result of registration. Redirect to the login page.
Exception-If the user misses some info or the info is repeated, the app reminds the cause of false registration and let the user input again.
2.2 Use case 2-Login
Precondition-the user has registered.
Description-The user inputs the name and password. The user inputs text and clicks the Login button to login.
Postcondition-The user logs in, and turns to the main page. The info stores in local database to make it easy for next login.
Exception-If the input of user name or password is wrong, there is a reminder displaying that the info is wrong and let the user input again.
2.3 Use case 3-Search for the order
Precondition-the user has logged in.
Description-The user clicks the search button, the app get user’s position info or let user to input their location, and search for the nearby order.
Postcondition-The app show the list of order, sort by the distance. The info stores in local database.
Exception- If the user’s location get is wrong or the input cannot be found on the map, there is a reminder displaying that the info is wrong and let the user input again.
2.4 Use case 4-View details of the order
Precondition-The user has searched and got the list of order.
Description-The user clicks the order they want to see.
Postcondition-The app shows the details of the order, include the restaurant’s name, the address of restaurant, the address of customer,  the deliverables, and the delivery time.
2.5 Use case 5-Take order
Precondition-The user has logged in (The order is available)
Description-After the user view the details of the order, he could click the take order button.
Postcondition- The user takes the order, and turns to the wait for the confirmation page. The info stores in local database.
Exception-If the order is taken by others, there is a reminder displaying that the order is taken by others and back to the search page, then search again and show the list of order.
2.6 Use case 6-Confirm the order
Precondition-The user has took the order.
Description-Turn to “wait for confirmation” page. After the take-out was delivery to the customer, the customer give the verification code to the user. The user input the verification code and click the confirm buttom.
Postcondition-The app check the verification code. If it’s correct, the tips is available in the user’s account.
Exception- If the input of verification code is wrong, there is a reminder displaying that the info is wrong and let the user input again.
2.7 Use case 7-Draw cash
Precondition-The user has logged in (The money is available on his account).
Description-Turn to “draw cash” page, the app requires the user to bind their bank card first. The user inputs the password to draw the money on his account to his bank card.
Postcondition- The user draw cash successful, there is a reminder displaying that the operation is successful. The info stores in local database.
Exception- If the input of password is wrong or there is something wrong with the user’s bank account, there is a reminder displaying that the info is wrong and let the user input again.
